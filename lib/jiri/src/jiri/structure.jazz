;;;==============
;;;  JiriScheme
;;;==============
;;;
;;;; Structure
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  See www.jazzscheme.org for details.


(module jiri.structure jazz


(import (jazz.io)
        (jiri)
        (jiri.base)
        (jiri.manage)
        (jiri.settings)
        (jiri.syntax (phase syntax)))


;;;
;;;; Structure
;;;


(define-jiri current-root-dir
  #f)

(define-jiri called-from
  #f)


(definition (section-dir section)
  (let ((root (get-root section)))
    (if (or (not root)
            (empty-string? root))
        ""
      (normalize-directory root))))


(definition public (update-dir)
  (string-append (current-root-dir) (section-dir (jiri-update-section))))

(definition public (worker-dir)
  (string-append (current-root-dir) (section-dir (jiri-worker-section))))

(definition public (app-dir)
  (string-append (current-root-dir) (section-dir (jiri-app-section))))

(definition public (data-dir)
  (and (jiri-data-section) (string-append (current-root-dir) (section-dir (jiri-data-section)))))

(definition public (app-directory)
  (get-directory (jiri-app-section)))

(cond-expand
  (mac
    (definition public (update-exe)
      (string-append (update-dir) "Contents/MacOS/" (jiri-update-exe))))
  (else
    (definition public (update-exe)
      (string-append (update-dir) (jiri-update-exe)))))

(cond-expand
  (mac
    (definition public (app-exe)
      (app-dir)))
  (else
    (definition public (app-exe)
      (add-extension (string-append (app-dir) (jiri-application)) (executable-extension kernel-platform)))))


;;;
;;;; Work
;;;


(definition public work-done?
  #f)

(definition public (set-work-done? value)
  (set! work-done? value))


(definition public work-downloaded
  0)

(definition public (set-work-downloaded value)
  (set! work-downloaded value))


(definition public send-ready?
  #f)

(definition public (set-send-ready? send?)
  (set! send-ready? send?)))
