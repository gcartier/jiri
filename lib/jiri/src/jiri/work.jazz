;;;==============
;;;  JiriScheme
;;;==============
;;;
;;;; Work
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  See www.jazzscheme.org for details.


(module jiri.work jazz


(import (jazz.graphic)
        (jazz.ui)
        (jazz.ui.window)
        (jiri.base)
        (jiri.font)
        (jiri.platform)
        (jiri.settings)
        (jiri.structure)
        (jiri.view)
        (jiri.window))


;; TODO
;; - When Marc has fixed the FFI error problem, replace the global error-handler by a catcher
;;   to ward against recursive errors
;; - A potential problem can occur when I push a new release because pushing to both app and
;;   world is not atomic. This can be alleviated a bit by a script to push a release pushing
;;   both repositories rapidly maybe even in parallel
;; - Install could pass info to the app of what was the last head so that we could show
;;   only what changed since last time by having a what's new system indexed by commit!?
;; - Invoking app directly should error
;; - On Joel's computer
;;   - Setup doesn't select Program Files by default
;;   - Bug that current-dir wasn't deleted in install-current
;;   - Understand why the Video Card Information is not created
;; - Need a clean solution to an update needing to do 'setup' job like install a new shortcut

;; DEVEL
;; - comment out (current-exception-handler jiri-exception-handler) and launch exe with -:dar

;; RELEASE
;; Install
;;   - b
;;   - cd release/install
;;   - commit and push changes
;; Setup
;;   - i
;;   - m
;;   - publish setup

;; SCENARIO
;; - Setup : clone install, delegate Install
;; - Launch : delegate Current
;; - Current direct : incorrect
;; - Current from Launch : pull install, if newer delegate Install else pull app/world
;; - Install from Setup : clone app/world
;; - Install from Current : pull app/world
;; - Install direct : incorrect
;; - App : incorrect but could be correct when version is validated with server

;; WINDOWS
;; - app
;;   - yownu
;;     - .git
;;     - Yownu.exe
;;     - lib
;;   - yownu-debug
;; - install
;;   - current
;;     - Install.exe
;;     - libgit2.dll
;;     - lib
;;   - yownu-install
;;     - .git
;;     - Install.exe
;;     - Launch.exe
;;     - Uninstall.exe
;;     - libgit2.dll
;;     - lib
;; - worlds
;;   - yownu
;;     - .git
;; Yownu.exe
;; lib


;;;
;;;; Root
;;;


(definition public root-view
  (new Jiri-Root
    position: (new Point 0 0)
    size: (new Dimension 850 550)))


;;;
;;;; Invite
;;;


(definition public invite-view
  (new Jiri-Title
    title: (jiri-invite)
    position: (new Point 30 18)
    size: (new Dimension 420 82)))


;;;
;;;; Minimize
;;;


(cond-expand
  (windows
   (definition public minimize-view
     (new Jiri-Minimize
       position: (new Point 796 13)
       size: (new Dimension 14 14))))
  (else
   (definition public minimize-view
     #f)))


;;;
;;;; Close
;;;


(cond-expand
  (windows
   (definition public close-view
     (new Jiri-Close
       position: (new Point 823 13)
       size: (new Dimension 14 14))))
  (else
   (definition public close-view
     #f)))


;;;
;;;; Remotes
;;;


(definition public remotes-view
  (new Jiri-Tree
    background: {Color Black alpha: 0.2}
    position: (new Point 24 118)
    size: (new Dimension 175 300)))


;;;
;;;; Stage
;;;


(definition public stage-setup-color
  {Color red: 175 green: 0 blue: 0})

(definition public stage-install-color
  {Color red: 185 green: 100 blue: 0})

(definition public stage-ready-color
  {Color red: 0 green: 150 blue: 0})


(definition public stage-view
  (new Jiri-Label
    title: ""
    font: default-label-font
    position: (new Point 49 446)
    size: (new Dimension 600 30)))


(definition public (add-stage-view title color)
  (add-view stage-view)
  (set-title~ stage-view title)
  (set-color~ stage-view color)
  (set-font~ stage-view {Font font-name: tahoma point-size: 20 hint-style: full}))


;;;
;;;; Percentage
;;;


(definition public percentage-view
  (new Jiri-Label
    title: "0%"
    font: default-label-font
    position: (new Point 51 477)
    size: (new Dimension 115 20)))


;;;
;;;; Downloaded
;;;


(definition public downloaded-view
  (new Jiri-Label
    title: "Downloaded: "
    font: default-label-font
    position: (new Point 175 477)
    size: (new Dimension 160 20)))


;;;
;;;; Status
;;;


(definition public status-view
  (new Jiri-Label
    title: ""
    font: default-label-font
    position: (new Point 345 477)
    size: (new Dimension 145 20)
    justification: 'tail))


;;;
;;;; Remaining
;;;


(definition public remaining-view
  (new Jiri-Label
    title: "Remaining: "
    font: default-label-font
    position: (new Point 500 477)
    size: (new Dimension 150 20)
    justification: 'tail))


;;;
;;;; Progress
;;;


(definition public progress-view
  (new Jiri-Progress
    position: (new Point 50 498)
    size: (new Dimension 600 20)
    section: (new Range 0. 1.)
    range: (new Range 0 10)
    pos: 0))


(definition protected (update-percentage)
  (set-title~ percentage-view (string-append (number->string (fxround (effective-percentage~ progress-view))) "%")))


(set-percentage-updater update-percentage)


;;;
;;;; Play
;;;


(definition public play-view
  (new Jiri-Button
    title: (or (jiri-play) "Play")
    position: (new Point 680 478)
    size: (new Dimension 135 40)
    enabled?: #f
    action-handler: (lambda (view)
                      (play))))


;;;
;;;; Installation
;;;


(cond-expand
  (windows
   (definition public (uninstall-subkey)
     (string-append "Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\" (jiri-title)))
   
   
   (definition public (desktop-shortcut)
     (let ((desktop (get-special-folder CSIDL_DESKTOPDIRECTORY)))
       (string-append desktop "/" (jiri-title) ".lnk")))
   
   
   (definition public (start-menu-appdir)
     (let ((startdir (get-special-folder CSIDL_STARTMENU)))
       (string-append startdir "/Programs/" (jiri-title))))
   
   
   (definition public (start-menu-shortcut appdir)
     (string-append appdir "/" (jiri-title) ".lnk")))
  (else))


;;;
;;;; Play
;;;


(definition public (play)
  (set-cursor :wait)
  (delegate-process (app-exe))
  (quit-callback))


;;;
;;;; Callback
;;;


(definition public download-progress
  #f)

(definition public (set-download-progress proc)
  (set! download-progress proc))


(definition public download-done
  #f)

(definition public (set-download-done proc)
  (set! download-done proc))


(definition public checkout-progress
  #f)

(definition public (set-checkout-progress proc)
  (set! checkout-progress proc))


(definition public checkout-done
  #f)

(definition public (set-checkout-done proc)
  (set! checkout-done proc)))
